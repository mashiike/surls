// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package surls

import (
	"github.com/google/wire"
	"github.com/mashiike/surls/controller"
	"github.com/mashiike/surls/usecase"
	"github.com/mashiike/surls/usecase/stub"
	"net/http"
)

// Injectors from dependency.go:

func newStubServMux(conf *Config) http.Handler {
	config := getControllerConfig(conf)
	getShortcutInteractor := stub.NewGetShortcutInteractor()
	usecase := newUsecase(getShortcutInteractor)
	handler := controller.NewServeMux(config, usecase)
	return handler
}

// dependency.go:

func NewServeMux(config *Config) http.Handler {
	switch {
	case config.UseStub:
		return newStubServMux(config)
	}
	return nil
}

var commonSet = wire.NewSet(controller.NewServeMux, getControllerConfig,
	newUsecase,
)

var stubSet = wire.NewSet(
	commonSet, stub.NewGetShortcutInteractor,
)

func getControllerConfig(conf *Config) *controller.Config {
	return conf.Route
}

func newUsecase(
	getShortcut usecase.GetShortcutInteractor,
) *usecase.Usecase {
	return &usecase.Usecase{
		GetShortcutInteractor: getShortcut,
	}
}
